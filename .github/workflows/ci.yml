name: CI

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: risestock
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres" --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      # Base de datos para Prisma en CI
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/risestock?schema=public
      # Secretos de pruebas para NextAuth (no usar en producci√≥n)
      NEXTAUTH_SECRET: testsecret
      AUTH_SECRET: testsecret
      NEXTAUTH_URL: http://localhost:3000
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Wait for Postgres
        run: |
          for i in {1..30}; do
            pg_isready -h localhost -p 5432 -U postgres && break
            sleep 1
          done
        shell: bash

      - name: Apply Prisma migrations
        run: pnpm prisma migrate deploy

      - name: Generate Prisma client
        run: pnpm prisma generate

      - name: Lint (ESLint)
        run: pnpm eslint

      - name: Prettier check
        run: pnpm prettier:check

      - name: Type check
        run: npx tsc -p tsconfig.json --noEmit

      - name: Build
        run: pnpm build
