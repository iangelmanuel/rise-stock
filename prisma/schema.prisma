generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum SaleStatus {
  PENDING
  COOKING
  READY
  SENDING
  PENDING_PAYMENT
  COMPLETED
  CANCELLED
  PAUSED
}

model User {
  id       String  @id @default(uuid())
  name     String
  email    String  @unique
  password String
  isActive Boolean @default(true)

  avatar String?

  UserMovement UserMovement[]
  Sale         Sale[]

  createdAt DateTime @default(now())
}

model UserMovement {
  id          String @id @default(uuid())
  name        String
  description String

  userId String
  user   User   @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
}

model Clothes {
  id     String @id @default(uuid())
  design String
  color  String
  price  Float  @default(80000)

  collectionId String?
  collection   Collection? @relation(fields: [collectionId], references: [id])

  variants     ClothesVariant[]
  clothesImage ClothesImage[]
  Sale         Sale[]

  createdAt DateTime @default(now())
}

model ClothesVariant {
  id    String @id @default(uuid())
  size  String
  stock Int    @default(0)

  clothesId String
  clothes   Clothes @relation(fields: [clothesId], references: [id])

  createdAt DateTime @default(now())
}

model ClothesImage {
  id        String  @id @default(uuid())
  secureUrl String
  publicId  String?

  clothesId String
  clothes   Clothes @relation(fields: [clothesId], references: [id])

  createdAt DateTime @default(now())
}

model Collection {
  id      String    @id @default(uuid())
  name    String
  clothes Clothes[]

  createdAt DateTime @default(now())
}

model Sale {
  id       String     @id @default(uuid())
  client   String
  note     String
  state    String
  city     String
  status   SaleStatus @default(PENDING)
  discount Float      @default(0)
  delivery Float      @default(0)
  total    Float      @default(0)

  saleDate DateTime @default(now())

  clotheId   String
  clotheSize String
  clothe     Clothes @relation(fields: [clotheId], references: [id])

  userId String
  user   User   @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
}
